{"ast":null,"code":"// export default (expenses, { text }) => {\n//     return expenses.filter((expense) => {\n//         const textMatch = expense.description.toLowerCase().includes(text.toLowerCase());\n//         return textMatch\n//     })\n// }\nexport default ((expenses, {\n  text,\n  sortBy,\n  startDate,\n  endDate\n}) => {\n  return expenses.filter(expense => {\n    const textMatch = expense.description.toLowerCase().includes(text.toLowerCase());\n    return textMatch;\n  }).sort((a, b) => {\n    if (sortBy === 'date') {\n      return a.createdAt < b.createdAt ? 1 : -1;\n    } else if (sortBy === 'amount') {\n      return a.amount < b.amount ? 1 : -1;\n    }\n  });\n});","map":{"version":3,"sources":["/Users/emmanuel/Desktop/Development/expenses-manager/client/src/utils/expensesFilters.js"],"names":["expenses","text","sortBy","startDate","endDate","filter","expense","textMatch","description","toLowerCase","includes","sort","a","b","createdAt","amount"],"mappings":"AAAA;AACA;AACA;AAEA;AACA;AACA;AAIA,gBAAe,CAACA,QAAD,EAAW;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,MAAR;AAAgBC,EAAAA,SAAhB;AAA2BC,EAAAA;AAA3B,CAAX,KAAoD;AAC/D,SAAOJ,QAAQ,CAACK,MAAT,CAAiBC,OAAD,IAAa;AAIlC,UAAMC,SAAS,GAAGD,OAAO,CAACE,WAAR,CAAoBC,WAApB,GAAkCC,QAAlC,CAA2CT,IAAI,CAACQ,WAAL,EAA3C,CAAlB;AAEA,WAAOF,SAAP;AACD,GAPM,EAOJI,IAPI,CAOC,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAChB,QAAIX,MAAM,KAAK,MAAf,EAAuB;AACrB,aAAOU,CAAC,CAACE,SAAF,GAAcD,CAAC,CAACC,SAAhB,GAA4B,CAA5B,GAAgC,CAAC,CAAxC;AACD,KAFD,MAEO,IAAIZ,MAAM,KAAK,QAAf,EAAyB;AAC9B,aAAOU,CAAC,CAACG,MAAF,GAAWF,CAAC,CAACE,MAAb,GAAsB,CAAtB,GAA0B,CAAC,CAAlC;AACD;AACF,GAbM,CAAP;AAcD,CAfH","sourcesContent":["// export default (expenses, { text }) => {\n//     return expenses.filter((expense) => {\n//         const textMatch = expense.description.toLowerCase().includes(text.toLowerCase());\n\n//         return textMatch\n//     })\n// }\n\n\n\nexport default (expenses, { text, sortBy, startDate, endDate }) => {\n    return expenses.filter((expense) => {\n      \n      \n     \n      const textMatch = expense.description.toLowerCase().includes(text.toLowerCase());\n  \n      return textMatch;\n    }).sort((a, b) => {\n      if (sortBy === 'date') {\n        return a.createdAt < b.createdAt ? 1 : -1;\n      } else if (sortBy === 'amount') {\n        return a.amount < b.amount ? 1 : -1;\n      }\n    });\n  };\n  "]},"metadata":{},"sourceType":"module"}